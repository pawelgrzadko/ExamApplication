Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS
Jak można roszerzyć obiekt inaczej niż wykorzystując dziedziczenie?|Przez utworzenie klasy abstrakcyjnej.//Przez kompozycję|1|Java
Jak wywołać metodę w klasie podrzędnej z klasy nadrzędnej?|self.nameMethod()//super.nameMethod()//this.selfMethod()//selfMethod()|2//3|Java
Jaka jest różnica pomiędzy let a var ?|Zmienna po przypisaniu przez let nie może być zmieniana.//Różni się zakresem, w którym zmienna jest dostępna.//Var tworzy zmienną globalną, let tworzy zmienną tylko w bieżącym bloku.//Wszystkie odpowiedzi są poprawne|0//1//2//3|JS
Jak działa klauzula HAVING?| Określa warunki, które muszą być spełnione przed klauzulą WHERE.//Pozwala na sumowanie danych za pomocą funkcji agregujących. //Zawęża wybór wierszy po podanych kryteriach z uwzględnieniem funkcji agregujących.|2|SQL
Po co stosuje się indeksy na bazie danych?|W celu przyspieszenia wyszukiwania wierszy przy dużej ilości danych.//W celu zachowania unikalności wierszy - zduplikowane rekordy na będą wyświetlane.//W celu posortowania wierszy, aby przyspieszyć wykonywanie funkcji na danych w klazuli WHERE.|1//2|SQL
Jak zadziała metoda setTimeout przy wywołaniu setTimeout( callback, 0 ) ?|Funkcja callback wykona się zaraz po zakończeniu bieżących zdarzeń w kolejce do wykonania.//Funkcja callback nigdy się nie wykona.//Funkcja callback będzie wywoływana bez końca.|2|JS